{"version":3,"file":"product-thumbs.js","sources":["../../src/js/util/media-query.js","../../src/js/components/product-thumbs.js"],"sourcesContent":["function getWindowWidth() {\n  return document.documentElement.clientWidth || document.body.clientWidth || window.innerWidth;\n}\n\nfunction getWindowHeight() {\n  return document.documentElement.clientHeight || document.body.clientHeight || window.innerHeight;\n}\n\nfunction isDesktop() {\n  return getWindowWidth() >= window.theme.sizes.small;\n}\n\nfunction isMobile() {\n  return getWindowWidth() < window.theme.sizes.small;\n}\n\nexport {getWindowWidth, getWindowHeight, isMobile, isDesktop};\n","import {isMobile} from '../util/media-query';\n\nconst selectors = {\n  productImage: '[data-image-id]',\n  productImagesContainer: 'product-images',\n  section: '[data-section-type]',\n  thumbItem: '[data-thumb-item]',\n  thumbLink: '[data-thumb-link]',\n  thumbSlider: '[data-thumbs-slider]',\n};\n\nconst attributes = {\n  activeMedia: 'data-active-media',\n  mediaId: 'data-media-id',\n};\n\nconst classes = {\n  active: 'is-active',\n  focused: 'is-focused',\n  mediaActive: 'media--active',\n  mediaHidden: 'media--hidden',\n  mediaHiding: 'media--hiding',\n};\n\nclass ProductThumbs extends HTMLElement {\n  constructor() {\n    super();\n\n    this.container = this.closest(selectors.section);\n    this.productImages = this.container.querySelectorAll(selectors.productImage);\n    this.productImagesContainer = this.container.querySelector(selectors.productImagesContainer);\n    this.productThumbs = this.container.querySelectorAll(selectors.thumbItem);\n    this.thumbSlider = this.querySelector(selectors.thumbSlider);\n    this.thumbLinks = this.querySelectorAll(selectors.thumbLink);\n  }\n\n  connectedCallback() {\n    this.handleEvents();\n    this.preloadImagesOnHover();\n    this.activeMediaObserver();\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  activeMediaObserver() {\n    const config = {attributes: true, childList: false, subtree: false};\n\n    // Callback function to execute when mutations are observed\n    const callback = (mutationList) => {\n      for (const mutation of mutationList) {\n        if (mutation.type === 'attributes' && mutation.attributeName == attributes.activeMedia) {\n          this.setActiveThumb();\n        }\n      }\n    };\n\n    this.observer = new MutationObserver(callback);\n    this.observer.observe(this.productImagesContainer, config);\n  }\n\n  handleEvents() {\n    this.thumbLinks.forEach((thumb) => {\n      thumb.addEventListener('click', (e) => {\n        e.preventDefault();\n        const thumbItem = thumb.closest(selectors.thumbItem);\n        const id = thumb.getAttribute(attributes.mediaId);\n\n        // Do nothing if clicked on the active thumbnail\n        if (thumbItem.classList.contains(classes.active)) return;\n\n        // Dispatch media select event to show the related product image\n        this.dispatchEvent(\n          new CustomEvent('theme:media:select', {\n            bubbles: true,\n            detail: {\n              id: id,\n            },\n          })\n        );\n      });\n\n      thumb.addEventListener('keyup', (e) => {\n        // On keypress Enter move the focus to the first focusable element in the related slide\n        if (e.code === 'Enter') {\n          const mediaId = thumb.getAttribute(attributes.mediaId);\n          const mediaElem = this.productImagesContainer\n            .querySelector(`[${attributes.mediaId}=\"${mediaId}\"]`)\n            ?.querySelectorAll('model-viewer, video, iframe, button, [href], input, [tabindex]:not([tabindex=\"-1\"])')[0];\n          if (mediaElem) {\n            mediaElem.dispatchEvent(new Event('focus'));\n            mediaElem.dispatchEvent(new Event('select'));\n          }\n        }\n      });\n    });\n  }\n\n  // Preload product images when hover on a related thumbnail\n  preloadImagesOnHover() {\n    this.thumbLinks.forEach((thumb) => {\n      thumb.addEventListener('mouseover', () => {\n        const id = thumb.getAttribute(attributes.mediaId);\n        const productImage = this.productImagesContainer.querySelector(`[${attributes.mediaId}=\"${id}\"] img`);\n        productImage?.setAttribute('loading', 'eager');\n      });\n    });\n  }\n\n  setActiveThumb() {\n    const id = this.productImagesContainer.getAttribute(attributes.activeMedia);\n    const selectedThumb = this.querySelector(`[${attributes.mediaId}=\"${id}\"]`);\n\n    // Remove class active from the previously selected thumbnail\n    this.querySelector(`${selectors.thumbItem}.${classes.active}`)?.classList.remove(classes.active);\n\n    // Add class active to the selected thumbnail\n    selectedThumb?.parentNode.classList.add(classes.active);\n\n    requestAnimationFrame(() => {\n      this.scrollToThumb();\n    });\n  }\n\n  scrollToThumb() {\n    const thumbs = this.thumbSlider;\n\n    if (thumbs) {\n      const thumb = thumbs.querySelector(`.${classes.active}`);\n      if (!thumb) return;\n      const thumbsScrollTop = thumbs.scrollTop;\n      const thumbsScrollLeft = thumbs.scrollLeft;\n      const thumbsWidth = thumbs.offsetWidth;\n      const thumbsHeight = thumbs.offsetHeight;\n      const thumbsPositionBottom = thumbsScrollTop + thumbsHeight;\n      const thumbsPositionRight = thumbsScrollLeft + thumbsWidth;\n      const thumbPosTop = thumb.offsetTop;\n      const thumbPosLeft = thumb.offsetLeft;\n      const thumbWidth = thumb.offsetWidth;\n      const thumbHeight = thumb.offsetHeight;\n      const thumbRightPos = thumbPosLeft + thumbWidth;\n      const thumbBottomPos = thumbPosTop + thumbHeight;\n      const topCheck = thumbsScrollTop > thumbPosTop;\n      const bottomCheck = thumbBottomPos > thumbsPositionBottom;\n      const leftCheck = thumbsScrollLeft > thumbPosLeft;\n      const rightCheck = thumbRightPos > thumbsPositionRight;\n      const verticalCheck = bottomCheck || topCheck;\n      const horizontalCheck = rightCheck || leftCheck;\n      const isMobileView = isMobile();\n\n      if (verticalCheck || horizontalCheck) {\n        let scrollTopPosition = thumbPosTop - thumbsHeight + thumbHeight;\n        let scrollLeftPosition = thumbPosLeft - thumbsWidth + thumbWidth;\n\n        if (topCheck) {\n          scrollTopPosition = thumbPosTop;\n        }\n\n        if (rightCheck && isMobileView) {\n          scrollLeftPosition += parseInt(window.getComputedStyle(thumbs).paddingRight);\n        }\n\n        if (leftCheck) {\n          scrollLeftPosition = thumbPosLeft;\n\n          if (isMobileView) {\n            scrollLeftPosition -= parseInt(window.getComputedStyle(thumbs).paddingLeft);\n          }\n        }\n\n        thumbs.scrollTo({\n          top: scrollTopPosition,\n          left: scrollLeftPosition,\n          behavior: 'smooth',\n        });\n      }\n    }\n  }\n}\n\nif (!customElements.get('product-thumbs')) {\n  customElements.define('product-thumbs', ProductThumbs);\n}\n"],"names":["isMobile","document","documentElement","clientWidth","body","window","innerWidth","theme","sizes","small","selectors","attributes","classes","ProductThumbs","HTMLElement","constructor","super","this","container","closest","productImages","querySelectorAll","productImagesContainer","querySelector","productThumbs","thumbSlider","thumbLinks","connectedCallback","handleEvents","preloadImagesOnHover","activeMediaObserver","disconnectedCallback","observer","disconnect","MutationObserver","mutationList","mutation","type","attributeName","setActiveThumb","observe","childList","subtree","forEach","thumb","addEventListener","e","preventDefault","thumbItem","id","getAttribute","classList","contains","dispatchEvent","CustomEvent","bubbles","detail","code","mediaId","mediaElem","Event","setAttribute","selectedThumb","remove","parentNode","add","requestAnimationFrame","scrollToThumb","thumbs","thumbsScrollTop","scrollTop","thumbsScrollLeft","scrollLeft","thumbsWidth","offsetWidth","thumbsHeight","offsetHeight","thumbsPositionBottom","thumbsPositionRight","thumbPosTop","offsetTop","thumbPosLeft","offsetLeft","thumbWidth","thumbHeight","topCheck","leftCheck","rightCheck","verticalCheck","horizontalCheck","isMobileView","scrollTopPosition","scrollLeftPosition","parseInt","getComputedStyle","paddingRight","paddingLeft","scrollTo","top","left","behavior","customElements","get","define"],"mappings":"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"}